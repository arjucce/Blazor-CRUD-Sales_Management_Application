@page "/window/addnew"
@page "/window/edit/{Id:int}"
@using SalesManagementApp.Shared.Models
@inject NavigationManager navigationManager
@inject HttpClient _httpClient

<br />
<EditForm Model="@windows" OnValidSubmit="SaveWindow">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h4 class="text-primary">Create Window</h4>
        </div>
        <div class="card-body">
            <div class="form-group">
                <label for="Name" class="control-label">Window Name</label>
                <InputText class="form-control" @bind-Value="windows.Name" />

                @*<input form="Name" class="form-control" @bind="@windows.Name" />*@
                <ValidationMessage For="@(() => windows.Name)" />
            </div>
            <br />
            <div class="form-group row">
                <div class="col">
                    <button type="submit" class="btn btn-primary form-control">Submit</button>
                </div>
                <div class="col">
                    <button class="btn btn-success form-control" @onclick="Cancel">Back to List</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>
<form>
    <div class="container">
    </div>
</form>


@code {
    [Parameter]
    public int Id { get; set; }
    protected string Title = "Add";
    Windows windows = new Windows();

    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            Title = "Edit";
            windows = await _httpClient.GetFromJsonAsync<Windows>("api/window/" + Id);
        }
    }

    protected async Task SaveWindow()
    {
        if (windows.Id != 0)
        {
            await _httpClient.PutAsJsonAsync("api/window", windows);
        }
        else
        {
            await _httpClient.PostAsJsonAsync("api/window", windows);
        }
        Cancel();
    }

    public void Cancel()
    {
        navigationManager.NavigateTo("/window/windowList");
    }
}
