@page "/subelement/index"
@using SalesManagementApp.Shared.Models
@using SalesManagementApp.Shared.Models.VM;
@inject HttpClient _httpClient
@inject NavigationManager navigationManager
<br />
<div class="container">
    <div class="card">
        <div class='card-header'>
            <div class="row">
                <div class="col-md-6">
                    <a href='Subelement/AddNew' class="btn btn-primary" role="button">
                        <span class="oi oi-plus" aria-hidden="true"></span>
                    </a>
                </div>
                <div class="input-group col">
                    <input type="text" class="form-control" placeholder="Search by Element Type"
                           @bind="SearchString" @bind:event="oninput" @onkeyup="FilterUser" />
                    @if (SearchString.Length > 0)
                    {
                        <div class="input-group-append">
                            <button class="btn btn-danger" @onclick="ResetSearch">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="card-body">
            @if (windowElementsVMs == null)
            {
                <p><em>Loading... !</em></p>
            }
            else
            {
                <table class="table table-striped align-middle table-bordered">
                    <thead class="table-success">
                        <tr>
                            <th>Element Id</th>
                            <th>Window Name</th>
                            <th>Element Type</th>
                            <th>Element Width</th>
                            <th>Element Height</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in windowElementsVMs)
                        {
                            <tr>
                                <td>@item.ElementId </td>
                                <td>@item.WindowName </td>
                                <td>@item.ElelementType</td>
                                <td>@item.Width</td>
                                <td>@item.Height</td>                                
                                <td>
                                    <a href='/subelement/edit/@item.ElementId' class="btn btn-outline-dark" role="button">Edit</a>
                                    <button class="btn btn-danger" @onclick="() => Delete(item)"><span class="oi oi-trash" aria-hidden="true"></span></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>


@code {
    List<Subelements> subelements = new List<Subelements>();   
    
    List<WindowElementsVM> windowElementsVMs = new List<WindowElementsVM>();
    protected List<WindowElementsVM> searchData = new();
    protected string SearchString { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var response = await _httpClient.GetAsync("api/Element");
        response.EnsureSuccessStatusCode();
        windowElementsVMs = await _httpClient.GetFromJsonAsync<List<WindowElementsVM>>("api/Element");
        searchData = windowElementsVMs;
    }

    protected async void Delete(WindowElementsVM subelements)
    {
        await _httpClient.DeleteAsync("api/element/" + subelements.ElementId);
        navigationManager.NavigateTo("/subelement/index", true);
    }

    protected void FilterUser()
    {
        if (!string.IsNullOrEmpty(SearchString))
        {
            windowElementsVMs = searchData.Where(x => x.ElelementType.IndexOf(SearchString, StringComparison.OrdinalIgnoreCase) != -1).ToList();
        }
        else
        {
            windowElementsVMs = searchData;
        }
    }

    public void ResetSearch()
    {
        SearchString = string.Empty;
        windowElementsVMs = searchData;
    }
}
